{"version":3,"sources":["components/pagination/index.js","components/modal/index.js","components/table/index.js","pages/home.js","App.js","reportWebVitals.js","index.js"],"names":["Index","perPage","totalItems","handleActivePage","useState","activePage","state","setState","className","itemsCountPerPage","Number","totalItemsCount","pageRangeDisplayed","onChange","pageNumber","bind","index","props","Modal","size","aria-labelledby","centered","Header","closeButton","modalInfo","id","Body","title","body","items","page","search","modalShow","setModalShow","setModalInfo","posts","filter","val","toLowerCase","includes","length","map","el","onClick","show","substr","onHide","Home","setPosts","setPerPage","setPage","setSearch","useEffect","axios","get","then","res","data","lastPage","firstPage","curentPage","slice","type","e","target","value","placeholder","num","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c8c20eb0.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport Pagination from \"react-js-pagination\";\r\nimport \"../../styles/home.css\";\r\n\r\nexport default function Index({ perPage, totalItems, handleActivePage }) {\r\n  const [state, setState] = useState({\r\n    activePage: 1,\r\n  });\r\n\r\n  const handlePageChange = (pageNumber) => {\r\n    setState({ activePage: pageNumber });\r\n    handleActivePage(pageNumber);\r\n  };\r\n  return (\r\n    <div className=\"paginate\">\r\n      <Pagination\r\n        activePage={state.activePage}\r\n        itemsCountPerPage={Number(perPage)}\r\n        totalItemsCount={totalItems}\r\n        pageRangeDisplayed={4}\r\n        onChange={handlePageChange.bind()}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\n\r\nexport default function index(props) {\r\n  return (\r\n    <div>\r\n      <Modal\r\n        {...props}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <h4>post id: {props.modalInfo.id}</h4>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4 className=\"text-center\">{props.modalInfo.title}</h4>\r\n          <p className=\"text-center\">{props.modalInfo.body}</p>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Modal from \"../modal\";\r\nimport \"../../styles/table.css\";\r\n\r\nexport default function Index({ items, page, perPage, search }) {\r\n  const [modalShow, setModalShow] = useState(false);\r\n  const [modalInfo, setModalInfo] = useState([]);\r\n\r\n  const posts = items.filter((val) => {\r\n    if (!search === \"\") {\r\n      return val;\r\n    } else if (\r\n      val.title?.toLowerCase().includes(search.toLowerCase()) ||\r\n      val.body?.toLowerCase().includes(search.toLowerCase())\r\n    ) {\r\n      return val;\r\n    }\r\n  });\r\n\r\n  const show = (el) => {\r\n    setModalShow(true);\r\n    setModalInfo(el);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <table>\r\n        <tbody>\r\n          <tr className=\"head_tbl\">\r\n            <th>#</th>\r\n            <th>Заголовок</th>\r\n            <th>Описание</th>\r\n            <th>Username</th>\r\n          </tr>\r\n          {!posts.length ? (\r\n            <tr>\r\n              <div className=\"not-post\">\r\n                <h2>По вашему запросу ничего не найдено</h2>\r\n              </div>\r\n            </tr>\r\n          ) : (\r\n            posts?.map((el, index) => {\r\n              return (\r\n                <tr key={el.id} onClick={() => show(el)}>\r\n                  <td>{(page - 1) * perPage + (index + 1)}</td>\r\n                  <td>{el.title}</td>\r\n                  <td>{el.body.substr(0, 150) + \"...\"}</td>\r\n                  <td>Jovid ;)</td>\r\n                </tr>\r\n              );\r\n            })\r\n          )}\r\n        </tbody>\r\n      </table>\r\n\r\n      <Modal\r\n        show={modalShow}\r\n        modalInfo={modalInfo}\r\n        onHide={() => setModalShow(false)}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Pagination from \"../components/pagination\";\r\nimport Table from \"../components/table\";\r\nimport axios from \"axios\";\r\nimport \"../styles/home.css\";\r\n\r\nexport default function Home() {\r\n  const [posts, setPosts] = useState([]);\r\n  const [perPage, setPerPage] = useState(5);\r\n  const [page, setPage] = useState(1);\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    axios.get(\"https://jsonplaceholder.typicode.com/posts\").then((res) => {\r\n      setPosts(res.data);\r\n    });\r\n  }, []);\r\n\r\n  const handleSelect = (e) => {\r\n    setPerPage(e.target.value);\r\n  };\r\n\r\n  const handleActivePage = (num) => {\r\n    setPage(num);\r\n  };\r\n\r\n  const lastPage = page * perPage;\r\n  const firstPage = lastPage - perPage;\r\n  const curentPage = posts.slice(firstPage, lastPage);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"home\">\r\n        <div className=\"container\">\r\n          <div className=\"home__wrapper\">\r\n            <div className=\"header_table\">\r\n              <div className=\"search\">\r\n                <input\r\n                  type=\"text\"\r\n                  onChange={(e) => setSearch(e.target.value)}\r\n                  placeholder=\"Поиск...\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"table_list\">\r\n              <Table\r\n                items={curentPage}\r\n                page={page}\r\n                perPage={perPage}\r\n                search={search}\r\n              />\r\n            </div>\r\n            <div className=\"paginate_wrapper\">\r\n              <div className=\"select_wrapper\">\r\n                <h4>Кол-во пост на странице: </h4>\r\n                <select className=\"form-select\" onChange={handleSelect}>\r\n                  <option value=\"5\">5</option>\r\n                  <option value=\"10\">10</option>\r\n                  <option value=\"20\">20</option>\r\n                </select>\r\n              </div>\r\n              <Pagination\r\n                perPage={perPage}\r\n                totalItems={posts.length - 1}\r\n                handleActivePage={handleActivePage}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport Home from \"./pages/home\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Home} />\r\n          {/* <Route path=\"/404\" component={NotFound} />\r\n            <Route path=\"*\" component={NotFound} status={404} /> */}\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}